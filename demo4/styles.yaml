camera:
    type: perspective
    vanishing_point: [-.25, -.75]

lighting:
    type: directional

sources:
    osm:
        type: 'GeoJSONTileSource'
        url:  'http://vector.mapzen.com/osm/all/{z}/{x}/{y}.json'

layers:
    earth:
        data:
            source: osm
            layer: earth
        style:
            order: 0
            color: [.5, .5, .5]

    landuse:
        data:
            source: osm
            layer: landuse
        style:
            order: 1
            color: [.6, .6, .6]

    water:
        data:
            source: osm
            layer: water
        style:
            order: 2
            color: [.4, .4, .4]

    roads:
        data:
            source: osm
            layer: roads
        properties:
            width: 3
        style:
            order: 2
            color: [1, 1, 1]
            width: function () { return properties.width; }

        cycleway:
            filter: { highway: "cycleway" }
            style:
                color: [.8, 0, .8]
                width: function () { return properties.width * 2; }


        bridges:
            filter: { is_bridge: "yes" }
            properties:
                width: 3
            style:
                color: [0, .8, .8]
                width: function () { return properties.width * 3; }

    buildings:
        data:
            source: osm
            layer: buildings
        filter: function () { return feature.height > properties.min_height; }
        properties:
            min_height: 5
        style:
            order: 4
            name: buildings
            color: black # must set a vertex color for shader to be applied
            extrude:
                default: true


styles:
    buildings:
        extends: polygons
        shaders:
            uniforms:
                u_height: 0
                u_color_height: 0
            blocks:
                vertex: position.z *= u_height * .01;
                color: |
                    if (v_world_position.z > u_color_height) color.rgb = vec3(.8);
                    else color.rgb = vec3(.5);
