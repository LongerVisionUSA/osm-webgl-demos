camera:
    type: perspective
    vanishing_point: [-.25, -.75]

lights:
    light1:
        type: directional
        diffuse: 2

sources:
    osm:
        type: TopoJSONTiles
        url:  https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw
        max_zoom: 16

styles:
    buildings:
        base: polygons
        shaders:
            uniforms:
                u_height: 0
                u_color_height: 0
            blocks:
                # vary color and position by custom uniform, settable by the gui
                position: position.z *= u_height * .01;
                color: |
                    if (v_world_position.z > u_color_height) color.rgb = vec3(.8);
                    else color.rgb = vec3(.5);

layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: [.5, .5, .5]

    landuse:
        data: { source: osm }
        draw:
            polygons:
                order: 1
                color: [.6, .6, .6]

    water:
        data: { source: osm }
        draw:
            polygons:
                order: 2
                color: [.4, .4, .4]

    roads:
        data: { source: osm }
        properties: { width: 3 }
        draw:
            lines:
                order: 2
                color: [1, 1, 1]
                width: 9

        cycleway:
            filter: { highway: "cycleway" }
            draw:
                lines:
                    color: [.8, 0, .8]
                    width: function () { return properties.width * 2; }


        bridges:
            filter: { is_bridge: "yes" }
            draw:
                lines:
                    color: [0, .8, .8]
                    width: function () { return properties.width * 3; }

    buildings:
        data: { source: osm }
        # set a custom property, setable by the gui
        properties:
            min_height: 5
        # use the custom property to filter the data
        filter: function () { return feature.height > properties.min_height; }
        draw:
            polygons:
                style: buildings
                order: 4
                extrude: true

