sources:
    osm:
        type: MVT
        url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.mvt

cameras:
    perspective:
        type: perspective
        # focal_length: 1
        focal_length: [[16, 2], [17, 2.5], [18, 3], [19, 4], [20, 6]] # pairs of [zoom, focal len]
        vanishing_point: [-250, -250] # relative to center of screen, in pixels
    isometric:
        type: isometric
        axis: [0,1]
 
lights:
    key:
        type: directional
        direction: [-.2, 1, -1]
        diffuse: 1
        ambient: .6


styles:
    water:
        base: polygons
        animated: true
        shaders:
            defines:
                EFFECT_NOISE_ANIMATED: true
            blocks:
                global:
                    url: shaders/glsl-noise-periodic-3d.glsl
                fragment:
                    url: shaders/noise.glsl

    rainbow:
        base: polygons
        animated: true
        shaders:
            blocks:
                global: |
                    vec3 hsv2rgb(vec3 c) {
                        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
                        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
                        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
                    }
                color: |
                    vec3 c = vec3(v_world_position.z * .003 + u_time / 10., 1.0, 1.0);
                    color.rgb = hsv2rgb(c);

    popup:
        url: styles/popup.yaml

    elevator:
        base: polygons
        animated: true
        shaders:
            blocks:
                position: |
                    // Elevator buildings
                    if (position.z > 0.01) {
                        position.z *= (sin(position.z + u_time) + 1.0);
                    }

    breathe:
        url: styles/breathe.yaml

    dots:
        url: styles/dots.yaml

    halftone:
        url: styles/halftone.yaml

    colorhalftone:
        url: styles/halftone.yaml

    windows:
        url: styles/windows.yaml

layers:

    earth:
        data:
            source: osm
            layer: earth
        draw:
            polygons:
                order: 0
                color: [0.175, 0.175, 0.175]

    landuse:
        data:
            source: osm
            layer: landuse
        draw:
            polygons:
                order: 1
                interactive: true
                color: [0.5, 0.875, 0.5]
        pitch:
            filter:
                kind: ['pitch', 'garden', 'playground']
            draw:
                polygons:
                    color: [0.3, 0.675, 0.3]
                    order: .1

    water:
        data:
            source: osm
            layer: water
        draw:
            polygons:
            # style: water
                order: 2
                interactive: true
                color: [0.5, 0.5, 0.875]
            outline:
                style: lines
                color: [0.6, 0.6, 0.975]
                width: |
                    function () {
                        return (
                            zoom >= 16 &&
                            (feature.kind != 'ocean' && feature.kind != 'riverbank') &&
                            (2.5 * Math.log(zoom))
                        );
                    }

    roads:
        data:
            source: osm
            layer: roads
        draw:
            polygons:
                order: function () { return 3.5 + Math.min(Math.max(feature.sort_key * .000025, -1), 1) / 2; }
                interactive: function () { return (zoom >= 18); }
            outline:
                style: lines
                color: [0.7, 0.7, 0.7]
                width: 1
        highway:
            filter: { kind: highway }
            draw:
            polygons:
                color: [1.0, 1.0, 1.0]
                width: 9
                tunnel:
                    filter: { is_tunnel: yes }
                    draw:
                        polygons:
                            color: '#333'
                            width: 6
                        outline:
                            color: white
                            width: 2
        major_road:
            filter: { kind: major_road }
            draw:
            polygons:
                color: [0.5, 0.5, 0.5]
                width: 5
        minor_road:
            filter: { kind: minor_road }
            draw:
            polygons:
                color: [0.65, 0.65, 0.65]
                width: 4              
        path:
            filter:
               kind: path
            draw:
            polygons:
                color: [0.8, 0.8, 0.8]
                width: 3
        rail:
            filter:
                kind: rail
                not: { is_tunnel: yes }
            draw:
            polygons:
                color: [0.5, 0.0, 0.0]
                width: 3
                outline:
                    width: .5

    buildings:
        data:
            source: osm
            layer: buildings
        draw:
            polygons:
            order: 4
            interactive: true
            color: [.6, .6, .6]
            extrude: function () { return ((zoom >= 15 && feature.height > 20) || zoom >= 16) }
        namedBuildings:
            filter: { style: true }
            draw:
            polygons:
                color: [.6, .2, .2]
            namedKindBuildings:
                filter: { kind: true }
                draw:
            polygons:
                    color: [.6, .2, .6]
        kindBuildings:
            filter: { style: false, kind: true }
            draw:
            polygons:
                color: [.2, .2, .6]
